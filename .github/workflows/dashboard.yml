name: deploy-dashboard
on:
  push:
    branches:
      - main
    paths:
      - 'packages/dashboard/**'
      - '.github/workflows/dashboard.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development
      comment:
        description: 'Deployment comment'
        required: false
        type: string
defaults:
  run:
    working-directory: packages/dashboard
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'packages/dashboard/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy to S3
        run: |
          echo "Deploying to environment: ${ENVIRONMENT:-production}"
          echo "Comment: ${COMMENT:-none}"
          aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET_NAME }}/dashboard/latest
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}
          COMMENT: ${{ github.event.inputs.comment || 'none' }}
      - name: Set Automated CloudFront Invalidation
        run: |
          echo "Invalidating CloudFront cache for dashboard/latest/remoteEntry.js"
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/dashboard/latest/remoteEntry.js"